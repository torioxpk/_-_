const emojis = ["üçé", "üçå", "üçí", "üçâ", "üçá", "üçì", "üçç", "ü•ù", "ü••", "üçã", "üçë", "üçà"];
const totalPairs = emojis.length;
let cards = [];
let flippedCards = [];
let matchedPairs = 0;
let moves = 0;

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 2 ‡∏ä‡∏∏‡∏î (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà)
function generateCards() {
  const allEmojis = [...emojis, ...emojis];
  allEmojis.sort(() => 0.5 - Math.random()); // ‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î

  const gameContainer = document.getElementById('game-container');
  gameContainer.innerHTML = '';

  allEmojis.forEach((emoji, index) => {
    const card = document.createElement('div');
    card.classList.add('card');
    card.dataset.emoji = emoji;
    card.dataset.index = index;
    card.addEventListener('click', flipCard);
    gameContainer.appendChild(card);
    cards.push(card);
  });
}

// ‡∏û‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î
function flipCard() {
  if (this.classList.contains('flipped') || this.classList.contains('matched') || flippedCards.length === 2) return;

  this.classList.add('flipped');
  this.textContent = this.dataset.emoji;
  flippedCards.push(this);

  if (flippedCards.length === 2) {
    setTimeout(checkMatch, 700);
  }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà
function checkMatch() {
  const [card1, card2] = flippedCards;
  
  if (card1.dataset.emoji === card2.dataset.emoji) {
    card1.classList.add('matched');
    card2.classList.add('matched');
    matchedPairs++;
    document.getElementById('matched').textContent = `‡∏Ñ‡∏π‡πà‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ: ${matchedPairs} / ${totalPairs}`;
  } else {
    card1.classList.remove('flipped');
    card2.classList.remove('flipped');
    card1.textContent = '';
    card2.textContent = '';
  }

  flippedCards = [];
  moves++;
  document.getElementById('moves').textContent = `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î: ${moves} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`;

  if (matchedPairs === totalPairs) {
    setTimeout(() => alert(`‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô ${moves} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`), 500);
  }
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà
function resetGame() {
  moves = 0;
  matchedPairs = 0;
  flippedCards = [];
  cards = [];
  document.getElementById('moves').textContent = `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î: 0 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`;
  document.getElementById('matched').textContent = `‡∏Ñ‡∏π‡πà‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ: 0 / ${totalPairs}`;
  generateCards();
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
document.getElementById('reset-btn').addEventListener('click', resetGame);

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
generateCards();